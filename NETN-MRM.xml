<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<objectModel xsi:schemaLocation="http://standards.ieee.org/IEEE1516-2010 http://standards.ieee.org/downloads/1516/1516.2-2010/IEEE1516-DIF-2010.xsd" xmlns="http://standards.ieee.org/IEEE1516-2010" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelIdentification notes="netn-mrm_4">
        <name>NETN-MRM</name>
        <type>FOM</type>
        <version>3.0</version>
        <modificationDate>2023-04-09</modificationDate>
        <securityClassification>Not Classified</securityClassification>
        <purpose>The purpose of NETN-MRM is to support federations using multiple levels of resolution and aggregation and where the level of resolution changes during a simulation.</purpose>
        <applicationDomain></applicationDomain>
        <description>Models of real-world objects, processes and phenomena are used to create a synthetic representation suitable for the simulation. Individual entities represent distinct objects in the scenario, while aggregated models represent a group of associated physical entities.

The NATO Education and Training Network Multi-Resolution Modelling (NETN-MRM) FOM Module specifies how to perform aggregation and disaggregation of aggregated entities, e.g. units, to other levels of aggregation or physical entities.


The MRM FOM module specifies interaction classes necessary to enable federation multi-resolution modelling. The specification is based on IEEE 1516 High Level Architecture (HLA) Object Model Template (OMT) and intends to support interoperability in a federated simulation (federation) based on HLA. An HLA-based Federation Object Model (FOM) is used to specify types of data and their encoding on the network. </description>
        <useLimitation>NETN-MRM covers the following cases: 
* Aggregation of entities representing subunits or physical entities
* Disaggregation of entities representing a unit into entities representing subunits or physical entities
* Division of simulated entities into parts - resources divided and all entities simulated
* Merge of previously divided entities.</useLimitation>
        <useHistory notes="netn-mrm_1">v1.1 - Initial version of NETN-MRM FOM Module released as part of NETN-FOM v2.0.</useHistory>
        <useHistory notes="netn-mrm_2">v2.0 - Updated version by MSG-163 to be part of NETN-FOM v3.0.</useHistory>
        <useHistory notes="netn-mrm_3">v3.0 - Updated version by MSG-191 to be part of NATO-FOM v4.0</useHistory>
        <poc>
            <pocType>Release authority</pocType>
            <pocName>NATO Modelling and Simulation Group</pocName>
            <pocOrg>NATO Science and Technology Organization</pocOrg>
            <pocEmail>msg@cso.nato.int</pocEmail>
        </poc>
        <poc>
            <pocType>Primary author</pocType>
            <pocName>MSG-106 Enhanced CAX Architecture, Desing and Methodology</pocName>
            <pocOrg>NATO Modelling and Simulation Group</pocOrg>
            <pocEmail>msg@cso.nato.int</pocEmail>
        </poc>
        <poc>
            <pocType>Primary author</pocType>
            <pocName>MSG-134 NATO Distributed Simulation Architecture &amp; Design, Compliance Testing and Certification</pocName>
            <pocOrg>NATO Modelling and Simulation Group</pocOrg>
            <pocEmail>msg@cso.nato.int</pocEmail>
        </poc>
        <poc>
            <pocType>Primary author</pocType>
            <pocName>MSG-163 Evolution of NATO Standards for Federated Simulation</pocName>
            <pocOrg>NATO Modelling and Simulation Group</pocOrg>
            <pocEmail>msg@cso.nato.int</pocEmail>
        </poc>
        <poc>
            <pocType>Primary author</pocType>
            <pocName>MSG-191 NATO Standards for Federated Simulation and Services for Integration, Verification and Certification</pocName>
            <pocOrg>NATO Modelling and Simulation Group</pocOrg>
            <pocEmail>msg@cso.nato.int</pocEmail>
        </poc>
        <reference>
            <type>Dependency</type>
            <identification>NETN-ETR</identification>
        </reference>
        <reference>
            <type>Dependency</type>
            <identification>NETN-BASE</identification>
        </reference>
        <reference>
            <type>Dependency</type>
            <identification>NETN-ORG</identification>
        </reference>
        <other>
Copyright Â© 2020 by NATO/OTAN. All rights reserved.
This work is licensed under a Creative Commons Attribution-NoDerivatives 4.0 International License.

Above license gives you the right to use and redistribute the NETN FOM Module (XML file and Documentation) in its entirety without modification. You are also allowed to develop your own new FOM Modules (in separate XML files and separate documentation) that build-on/extends the NETN module by reference. You are NOT allowed to modify the NETN FOM Module or its documentation without prior permission by the NATO Modelling and Simulation Group.</other>
        <glyph type="png" height="48" width="48" alt="">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</glyph>
    </modelIdentification>
    <objects>
        <objectClass>
            <name>HLAobjectRoot</name>
            <objectClass>
                <name>BaseEntity</name>
                <sharing>Subscribe</sharing>
                <semantics>A base class of aggregate and discrete scenario domain participants. The BaseEntity class is characterized by being located at a particular location in space and independently movable, if capable of movement at all. It specifically excludes elements normally considered to be a component of another element. The BaseEntity class is intended to be a container for common attributes for entities of this type. Since it lacks sufficient class specific attributes that are required for simulation purposes, federates cannot publish objects of this class. Certain simulation management federates, e.g. viewers, may subscribe to this class. Simulation federates will normally subscribe to one of the subclasses, to gain the extra information required to properly simulate the entity.</semantics>
                <attribute>
                    <name>Status</name>
                    <dataType>ActiveStatusEnum8</dataType>
                    <updateType>Conditional</updateType>
                    <updateCondition>On change</updateCondition>
                    <ownership>DivestAcquire</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Optional. Indicates if this entity is currently being simulated or not. During an inactive state, the attribute values may not reflect accurate or current values. All attributes are updated to represent the current status of the object instance before setting the state to Active. The default is `Active`.</semantics>
                </attribute>
                <attribute>
                    <name>SourceAggregate</name>
                    <dataType>UUID</dataType>
                    <updateType>Conditional</updateType>
                    <updateCondition>On change</updateCondition>
                    <ownership>DivestAcquire</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Optional. Reference to an active `AggregateEnity` instance which is the source of a NETN-MRM division. The default value is all zeros representing no source AggregateEntity.</semantics>
                </attribute>
                <attribute>
                    <name>ParentAggregate</name>
                    <dataType>UUID</dataType>
                    <updateType>Conditional</updateType>
                    <updateCondition>On change</updateCondition>
                    <ownership>DivestAcquire</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Optional. If this simulation entity results from a disaggregation, this attribute refers to the disaggregated `AggregateEntity`. The default value is no reference, i.e. all zeros.</semantics>
                </attribute>
                <attribute>
                    <name>OrganizationElement</name>
                    <dataType>UUID</dataType>
                    <updateType>Conditional</updateType>
                    <updateCondition>On change</updateCondition>
                    <ownership>DivestAcquire</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Optional: Reference to an existing NETN-ORG  organization element, e.g. a `Unit` or `Equipment` represented by this simulation entity. The default value is no related organization element, i.e. all zeros.</semantics>
                </attribute>
                <objectClass>
                    <name>AggregateEntity</name>
                    <sharing>PublishSubscribe</sharing>
                    <semantics>A group of one or more separate objects that operate together as part of an organization. These objects may be discrete, may be other aggregate objects, or may be a mixture of both.</semantics>
                    <attribute>
                        <name>DividedEntities</name>
                        <dataType>ArrayOfUuid</dataType>
                        <updateType>NA</updateType>
                        <updateCondition>NA</updateCondition>
                        <ownership>DivestAcquire</ownership>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Optional. Reference to other aggregate or physical entities divided from the `AggregateEntity` to represent specific subsets of holdings.</semantics>
                    </attribute>
                    <attribute>
                        <name>DisaggregatedEntities</name>
                        <dataType>ArrayOfUuid</dataType>
                        <updateType>NA</updateType>
                        <updateCondition>NA</updateCondition>
                        <ownership>DivestAcquire</ownership>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Optional. Reference to the disaggregated entities after disaggregation of this `AggregateEntity`. Each element should refer to an existing entity in the federation. The `Status` of this `AggregateEntity` shall be inactive if disaggregated entities exist.|</semantics>
                    </attribute>
                    <attribute>
                        <name>SupportedAggregationActions</name>
                        <dataType>AggregationActionArray</dataType>
                        <updateType>Conditional</updateType>
                        <updateCondition>On change</updateCondition>
                        <ownership>DivestAcquire</ownership>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Optional: This aggregated entity supports the listed aggregation actions.</semantics>
                    </attribute>
                </objectClass>
            </objectClass>
        </objectClass>
    </objects>
    <interactions>
        <interactionClass>
            <name>HLAinteractionRoot</name>
            <interactionClass>
                <name>MRM_Root</name>
                <sharing>Neither</sharing>
                <transportation>HLAreliable</transportation>
                <order>Receive</order>
                <semantics>Base Interaction Class for all MRM related interactions.</semantics>
                <parameter>
                    <name>Entity</name>
                    <dataType>UUID</dataType>
                    <semantics>Required: Simulated Entity to Aggregate, Disaggregate, Divide or Merge.</semantics>
                </parameter>
                <interactionClass>
                    <name>Aggregate</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Instructs a federate application modelling the `AggregateEntity` to perform aggregation of the `DisaggregatedEntities`.</semantics>
                </interactionClass>
                <interactionClass>
                    <name>Disaggregate</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Instructs a federate application to disaggregate the indicated `AggregateEntity`.</semantics>
                </interactionClass>
                <interactionClass>
                    <name>Divide</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Instructs a federate application to divide the `AggregateEntity` into multiple simulated entities.</semantics>
                    <parameter>
                        <name>Equipment</name>
                        <dataType>ArrayOfResourceStatus</dataType>
                        <semantics>Optional. Amount of equipment of different type and health status to be divided.</semantics>
                    </parameter>
                    <parameter>
                        <name>Personnel</name>
                        <dataType>ArrayOfResourceStatus</dataType>
                        <semantics>Optional. Amount of personnel of different type and health status to be divided.</semantics>
                    </parameter>
                    <parameter>
                        <name>Supplies</name>
                        <dataType>ArrayOfSupplyStatus</dataType>
                        <semantics>Optional. Amount of supplies to divide.</semantics>
                    </parameter>
                    <parameter>
                        <name>RegisterPhysicalEntities</name>
                        <dataType>HLAboolean</dataType>
                        <semantics>Optional. If true, all Equipment of type Platform and Lifeform are published as individual objects in the federation.</semantics>
                    </parameter>
                </interactionClass>
                <interactionClass>
                    <name>Merge</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Instructs a federate application to merge an `AggregateEntity` with divided entities.</semantics>
                    <parameter>
                        <name>DividedEntities</name>
                        <dataType>ArrayOfUuid</dataType>
                        <semantics>Required. A subset of identifiers from the DividedEntities attribute of the referenced AggregateEntity. The set of identifiers indicates which divided entities to merge with the AggregateEntity.</semantics>
                    </parameter>
                </interactionClass>
                <interactionClass>
                    <name>Response</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>A response from the receiving federate indicating ability to comply with a request.</semantics>
                    <parameter>
                        <name>Request</name>
                        <dataType>UUID</dataType>
                        <semantics>Required: Reference to the request this interaction is a response to.</semantics>
                    </parameter>
                    <parameter>
                        <name>Status</name>
                        <dataType>HLAboolean</dataType>
                        <semantics>Required. Specifies the result of the request action. TRUE indicates success.</semantics>
                    </parameter>
                </interactionClass>
            </interactionClass>
        </interactionClass>
    </interactions>
    <dataTypes>
        <enumeratedDataTypes>
            <enumeratedData>
                <name>AggregationActionsEnum</name>
                <representation>HLAinteger32BE</representation>
                <semantics>The types of MRM aggregation actions.</semantics>
                <enumerator>
                    <name>Aggregation</name>
                    <value>1</value>
                </enumerator>
                <enumerator>
                    <name>Disaggregation</name>
                    <value>2</value>
                </enumerator>
                <enumerator>
                    <name>Divide</name>
                    <value>3</value>
                </enumerator>
                <enumerator>
                    <name>Merge</name>
                    <value>4</value>
                </enumerator>
            </enumeratedData>
        </enumeratedDataTypes>
        <arrayDataTypes>
            <arrayData>
                <name>AggregationActionArray</name>
                <dataType>AggregationActionsEnum</dataType>
                <cardinality>Dynamic</cardinality>
                <encoding>HLAvariableArray</encoding>
                <semantics>A list of aggregation actions.</semantics>
            </arrayData>
        </arrayDataTypes>
    </dataTypes>
    <notes>
        <note>
            <label>netn-mrm_1</label>
            <semantics>NETN-MRM FOM Module v1.1.1 was developed by MSG-106 and released 2014-05-15.</semantics>
        </note>
        <note>
            <label>netn-mrm_2</label>
            <semantics>* Changed Filename to NETN-MRM.xml 
* Changed `modelIdentification` `securityClassification` from `unclassified` to `Not Classified` 
* Changed `modelIdentification` `other` to include license information 
* Changed `modelIdentification` `reference` to only refer to directly dependent FOM Modules 
* Added `modelIdentification` `useLimitation` to reflect Scope of FOM Module 
* Added `modelIdentification` `glyph` 
* Updated `modelIdentification` `purpose` to reflect Purpose of FOM Module 
* Updated `modelIdentification` `description` to reflect Introduction of FOM Module 
* Updated `modelIdentification` `name` to NATO Education and Training Network (NETN) Multi-Resolution Modelling (MRM) Module 
* Updated `modelIdentification` `poc` to include Release authority, Primary authors and Contributors 
* Updated `modelIdentification` `applicationDomain` to empty. 
* Removed NETN-MRM dependency on NETN-TMR. 
* Merged NETN-Aggregate to NETN-MRM. 
* Removed InteractionClass `MRM_Object` 
* Removed InteractionClass `MRM_TriggerResponse` 
* Removed InteractionClass `MRM_Trigger` 
* Renamed InteractionClass `MRM_DisaggregationRequest` 
* Renamed InteractionClass `MRM_AggregationRequest` 
* Removed InteractionClass `MRM_DisaggregationResponse` 
* Removed InteractionClass `MRM_AggregationResponse` 
* Removed InteractionClass `MRM_CancelRequest` 
* Removed InteractionClass `MRM_ActionComplete` 
* Added InteractionClass `MRM_Interaction` 
* Added InteractionClass `Request` 
* Added InteractionClass `Aggregate` 
* Added InteractionClass `Disaggregate` 
* Added InteractionClass `Divide` 
* Added InteractionClass `Merge` 
* Added InteractionClass `Inactivate` 
* Added InteractionClass `Activate` 
* Added InteractionClass `QuerySupportedCapabilities` 
* Added InteractionClass `CapabilitiesSupported` 
* Added InteractionClass `Response` 
* Removed datatype `AggregateStateEnum32` 
* Removed datatype `EntityListVariableLengthStruct` 
* Removed datatype `UpdateTypeEnum32` 
* Removed datatype `SupportRelationshipStruct` 
* Removed datatype `FacingDegreesFloat32` 
* Removed datatype `CoverStatusStruct` 
* Removed datatype `CoverEnum8` 
* Removed datatype `CombatValueFloat64` 
* Removed datatype `SupportRelationshipEnum8` 
* Removed datatype `EchelonEnum8` 
* Removed datatype `PercentageUint32` 
* Renamed datatype `NonComplianceReasonEnum` to `MRM_ResponseStatusEnumType` 
* Replaced datatype `PercentageUint32` with `PercentUnsignedInteger32` 
* Replaced datatype `FacingDegreesFloat32` with `DirectionDegreesFloat32` 
* Replaced datatype `TimeSecInt64` with `EpochTimeSecInt64` 
* Moved datatype `QuantityFloat64` to NETN-BASE 
* Changed datatype of `NETN_Aggregate.Mounted` to `PercentFloat64` 
* Changed datatype of `NETN_Aggregate.SourceUnit` to `UuidArrayOfHLAbyte16` 
* Changed datatype of `NETN_Aggregate.Symbol` to `SymbolIdentifier` 
* Changed datatype of `NETN_Aggregate.Footprint` to `GeocentricPolygon ` 
* Added attribute `Route` for  object class `NETN_Aggregate` 
* Added attribute `Destination` for  object class `NETN_Aggregate` 
* Updated semantics of attribute `NETN_Aggregate.UniqueId` 
* Renamed attribute `NETN_Aggregate.UniqueID` to `NETN_Aggregate.UniqueId` 
* Renamed attribute `Symbol` of `NETN_Aggregate` to `SymbolId` 
* Renamed attribute `UnitEquipment`  of `NETN_Aggregate` to `EquipmentStatus` 
* Renamed attribute `UnitPersonnel`  of `NETN_Aggregate` to `PersonnelStatus` 
* Renamed attribute `UnitSupplies`  of `NETN_Aggregate` to `Supplies` 
* Removed attribute `Footprint`of `NETN_Aggregate` object class 
* Removed attribute `SupportUnit` of `NETN_Aggregate` object class 
* Added field `ResourceType` to datatype `ResourceStatusNumberStruct` 
* Changed datatype of attribute `CoverStatus` of `NETN_Aggregate` to `PercentFloat64` 
* Changed datatype of attribute `CombatValue` of `NETN_Aggregate` to `PercentFloat64` 
* Changed datatype of attribute `EntityList` of `NETN_Aggregate` to `ArrayOfEntityStruct` 
* Changed datatype of attribute `Echelon` of `NETN_Aggregate` to `EchelonEnum32` 
* Added field `UnitAllocation` to datatype `EntityStruct`</semantics>
        </note>
        <note>
            <label>netn-mrm_3</label>
            <semantics>* Removed `NETN_Aggregate` object class 
* Replaced `NETN_Aggregate` attribute `UniqueId` with NETN-BASE `HLAobjectRoot` attribute `UniqueId` 
* Replaced `NETN_Aggregate` attribute `Status` with NETN-MRM `BaseEntity` attribute `Status` 
* Replaced `NETN_Aggregate` attribute `SubunitList` with NETN-MRM `AggregateEntity` attribute `DisaggregatedEntities` 
* Replaced `NETN_Aggregate` attribute `ParentUnit` with NETN-MRM `BaseEntity` attribute `ParentAggregate` 
* Replaced `NETN_Aggregate` attribute `DividedUnitList` with NETN-MRM `AggregateEntity` attribute `DividedEntities` 
* Replaced `NETN_Aggregate` attribute `SourceUnit` with NETN-MRM `BaseEntity` attribute `SourceAggregate` 
* Removed `NETN_Aggregate` attribute `EmbeddedUnitList` 
* Replaced `NETN_Aggregate` attribute `HigherHeadquarters` with NETN-ORG `Unit` attribute `HigherHeadquarters` 
* Replaced `NETN_Aggregate` attribute `Mounted` with NETN-ENTITY `BaseEntity` attribute `HostEntitiy` and NETN-Physical `AggregateEntity` attribute `MountProgress` 
* Replaced `NETN_Aggregate` attribute `SymbolId` with NETN-ENTITY `BaseEntity` attribute `Symbol` 
* Replaced `NETN_Aggregate` attribute `Callsign` with NETN-ENTITY `BaseEntity` attribute `Callsign` 
* Replaced `NETN_Aggregate` attribute `Echelon` with NETN-ENTITY `AggregateEntity` attribute `Echelon` 
* Removed `NETN_Aggregate` attribute `EntityList` 
* Replaced `NETN_Aggregate` attribute `SuppliesStatus` with NETN-LOG `AggregateEntity` attribute `SuppliesStatus` 
* Replaced `NETN_Aggregate` attribute `EquipmentStatus` with NETN-LOG `AggregateEntity` attribute `EquipmentStatus` 
* Replaced `NETN_Aggregate` attribute `PersonnelStatus` with NETN-LOG `AggregateEntity` attribute `PersonnelStatus` 
* Replaced `NETN_Aggregate` attribute `VisualSignature` with NETN-ENTITY `BaseEntity` attribute `Signatures` 
* Replaced `NETN_Aggregate` attribute `HUMINTSignature` with NETN-ENTITY `BaseEntity` attribute `Signatures` 
* Replaced `NETN_Aggregate` attribute `ElectronicSignature` with NETN-ENTITY `BaseEntity` attribute `Signatures`  `ElectronicSignature` 
* Replaced `NETN_Aggregate` attribute `CombatValue` with NETN-ENTITY `AggregateEntity` attribute `CombatValue` 
* Replaced `NETN_Aggregate` attribute `CoverStatus` with NETN-ENTITY `BaseEntity` attribute `Protection` 
* Replaced `NETN_Aggregate` attribute `CaptureStatus` with NETN-ETR `BaseEntity` attribute `CaptureStatus` 
* Removed `NETN_Aggregate` attribute `Mission` 
* Replaced `NETN_Aggregate` attribute `Activity` with NETN-ETR `BaseEntity` attribute `Activity` 
* Replaced `NETN_Aggregate` attribute `Route` with NETN-ETR `BaseEntity` attribute `Route` 
* Replaced `NETN_Aggregate` attribute `Destination` with NETN-ETR `BaseEntity` attribute `Destination` 
* Replaced `NETN_Aggregate` attribute `WeaponsControlOrder` with NETN-ENTITY `AggregateEntity` attribute `WeaponsControlOrder` 
* Removed `MRM_Interaction` interaction class 
* Replaced `MRM_Interaction` parameter `EventId` with NETN-BASE `HLAinteractionRoot` attribute `UniqueId` 
* Removed `CapabilitiesSupported` interaction class 
* Replaced `CapabilitiesSupported` parameter `CapabilityNames` with `AggregateEntity` attribute `SupportedAggregationActions` 
* Removed `Request` interaction class 
* Removed `Request` parameter `Federate` 
* Replaced `Request` parameter `AggregateUnit` with NETN-ETR `ETR_SimCon` parameter `SimulatedEntity` 
* Replaced `Response` interaction class with NETN-ETR `Response` interaction class 
* Removed `Activate` interaction class 
* Removed `Deactivate` interaction class 
* Removed `QuerySupportedCapabilities` interaction class 
* Removed `Aggregate` parameter `RemoveSubunits` 
* Renamed `Merge` parameter `Subunits` to `DividedEntities` 
 
 
* Removed datatype `MissionStruct` 
* Removed datatype `EntityStruct` 
* Removed datatype `ArrayOfEntityStruct` 
* Removed datatype `ConcealmentEnum32` 
* Removed datatype `EntityCategoryEnum32` 
* Moved all the rest of datatype to NETN-Physical 
* Added datatype `AggregationActionEnum` 
* Added datatype `AggregationActionArray` 
 
* Replaced all use of Array datatype `NETN_ArrayOfSupplyStruct` with `SupplyStructArray` 
* Replaced all use of `PercentUnsignedInteger32` with `PercentFloat32` 
* Replaced all use of `PercentFloat64` with `PercentFloat32`</semantics>
        </note>
        <note>
            <label>netn-mrm_4</label>
            <semantics>## Overview 
 
NETN-MRM extends the RPR-FOM `BaseEntity` and `AggregateEntity` object classes and defines `ETR_SimCon` interactions classes to trigger aggregation, disaggregation, division, and merge actions for aggregated entities. 
 
Implementing these MRM actions relies on knowledge of units' structure, organization, and equipment as defined in NETN-ORG. 
 
A NETN-ORG `Unit` can be represented in the federation as a single `AggregateEntity` object or as a collection of multiple `AggregateEntity` or `PhysicalEntity` objects. E.g. a `Unit` with associated `Equipment` in NETN-ORG can be represented as a combination of an `AggregateEntity` representing most of the unit and `Platform` entities to represent each platform equipment associated with the unit. 
 
The initial representation of units in the federation can change during runtime. For example, use the MRM actions to request aggregation and disaggregation or to split the entity by dividing holdings among multiple aggregate and physical entity objects. 
 
### Pattern 
 
All MRM actions use the same pattern of interaction. 
 
Use the `AggregateEntity` attribute `SupportedAggregationActions` to check the simulation entity's support for an MRM action. 
 
```mermaid 
sequenceDiagram 
autonumber 
 
Trigger-&gt;&gt;AggregateEntity: Request 
note over AggregateEntity: Execute action 
AggregateEntity-&gt;&gt;Federation: registerObjectInstance, &lt;br&gt;updateAttributeValues, &lt;br&gt;deleteObjectInstance 
AggregateEntity-&gt;&gt;Trigger: Response 
``` 
 
 
1. A federate triggers an MRM action for a specified `AggregateEntity` using `ETR_SimCon` interaction subclasses 
2. The federate owning the `DisaggregatedEntities` attribute of the `AggregateEntity` is responsible for aggregation and disaggregation actions. The federate owning the `DividedEntities` attribute of the `AggregateEntity` is responsible for division and merging actions. Executing the action may include registering, deleting and updating objects in the federation. 
3. The federate then reports the success of the action using the `Response` interaction. 
 
 
### Disaggregation 
 
A federate application can perform disaggregation of an `AggregateEntity` under the following conditions: 
 
```mermaid 
flowchart BT 
Unit1 --SuperiorUnit--&gt; Unit 
Unit2 --SuperiorUnit--&gt; Unit 
AggregateEntity --Unit--&gt; Unit 
 
subgraph NETN-MRM 
AggregateEntity 
end 
 
subgraph NETN-ORG 
Unit 
Unit1 
Unit2 
end 
``` 
 
* The federate application owning the `DisaggregatedEntities` attribute of the `AggregateEntity` can perform disaggregation. 
* The `Status` of the `AggregateEntity` is `Active`. 
* The `AggregateEntity` has not been divided, i.e. the `DividedEntities` attribute must be empty. 
* The `AggregateEntity` attribute `OrganizationElement` refers to an existing NETN-ORG `Unit` object. 
* The NETN-ORG `Unit` object has one or more subunits. 
 
 
```mermaid 
sequenceDiagram 
autonumber 
 
Trigger-&gt;&gt;AggregateEntity: Disaggregate(aggregate) 
AggregateEntity-&gt;&gt;Federation: aggregate.updateAttributeValues(Status) 
loop 
AggregateEntity-&gt;&gt;Federation: registerObjectInstance(entity) 
AggregateEntity-&gt;&gt;Federation: entity.updateAttributeValues 
end 
AggregateEntity-&gt;&gt;Federation: aggregate.updateAttributeValues(DisaggregatedEntities) 
AggregateEntity-&gt;&gt;Trigger: Response 
 
``` 
 
1. A Request federate sends a `Disaggregate` request indicating which `AggregateEntity` to disaggregate. The Federate owning the `DisaggregatedEntities` attribute of the `AggregateEntity` is responsible for disaggregation. 
2. The Federate updates the `Status` of the `AggregateEntity` to `Inactive`. 
3. The Federate registers new `AggregateEntity` objects to represent the disaggregated entities. One instance for each of the subunits of the referenced `Unit`. 
4. The federate updates the initial attribute values for the new disaggregated entities, including the `ParentUnit` attribute to refer to the `AggregateEntity` and the `Status` to `Active`. 
5. The federate updates the `DisaggregatedEntities` attribute of the `AggregateEntity` object to reference the new disaggregated entities. 
6. On completion, the federate sends a `Response` interaction with the `Status` parameter set to indicate the successful completion of the request. 
 
After performing disaggregation, the following is true: 
 
```mermaid 
flowchart BT 
AggregateEntity[/AggregateEntity/] 
Unit1 --SuperiorUnit--&gt; Unit 
Unit2 --SuperiorUnit--&gt; Unit 
 
AggregateEntity1 --Unit--&gt; Unit1 
AggregateEntity2 --Unit--&gt; Unit2 
AggregateEntity1 --ParentAggregate--&gt; AggregateEntity 
AggregateEntity2 --ParentAggregate--&gt; AggregateEntity 
AggregateEntity--Unit--&gt;Unit 
 
subgraph NETN-MRM 
AggregateEntity 
AggregateEntity1 
AggregateEntity2 
end 
 
subgraph NETN-ORG 
Unit 
Unit1 
Unit2 
end 
 
``` 
 
* The `Status` of the `AggregateEntity` is `Inactive`. 
* New `AggregateEntity` objects exist for all subunits of the referenced NETN-ORG `Unit`. 
* Each new `AggregateEntity` refers to the corresponding subunit by its `OrganizationElement` attribute. 
* The `Status` of each new `AggregateEntity` is `Active`. 
* The `ParentAggregate` of each new `AggregateEntity` refers to the original disaggregated `AggregateEntity` 
* The `DisaggregsatedEntities` attribute of the disaggregated `AggregateEntity` reference all the new `AggregateEntity` objects 
 
If a subunit has one or more associated `Equipment` objects, then these are represented in the federation as `PhysicalEntity` objects. Each `PhysicalEntity` refers to the associated `Equipment` using the `OrganizationElement` attribute. In addition, the status of the `PhysicalEntity` is `Active`, and the `ParentAggregate` refers to the now disaggregated `AggregateEntity`. 
 
```mermaid 
flowchart BT 
AggregateEntity[/AggregateEntity/] 
Unit1 --SuperiorUnit--&gt; Unit 
Equipment --HoldingUnit--&gt; Unit1 
AggregateEntity1 --Unit--&gt; Unit1 
AggregateEntity1 --ParentAggregate--&gt; AggregateEntity 
 
AggregateEntity--Unit--&gt;Unit 
PhysicalEntity --Equipment--&gt;Equipment 
PhysicalEntity --ParentAggregate--&gt; AggregateEntity 
 
subgraph NETN-MRM 
AggregateEntity 
AggregateEntity1 
 
PhysicalEntity 
 
end 
 
subgraph NETN-ORG 
Unit 
Unit1 
Equipment 
end 
 
``` 
 
Disaggregation always constitutes a complete disaggregation of all subunits and associated equipment into active `AggregateEntity` or `PhysicalEntity` objects. The disaggregated `AggregateEntity` remains registered as `Inactive` in the federation. 
 
 
### Aggregation 
 
Aggregation of an `AggregateEntity` always constitutes a complete aggregation of all entities referenced by the `DisaggregatedEnties` attribute. 
 
A federate application can perform aggregation of an `AggregateEntity` under the following conditions: 
 
* The federate application owning the `DisaggregatedEntities` attribute of the `AggregateEntity` can perform aggregation. 
* The `Status` of the `AggregateEntity` is `Inctive`. 
* The `DividedEntities` attribute must be empty in all `AggregateEntity` objects referenced by the `DisaggregatedEntities` attribute, i.e. entities referencing the `AggregateEntity` using the `ParentAggregate` attribute are not divided. 
* The `DisaggregatedEntities` attribute must be empty in all `AggregateEntity` objects referenced by the `DisaggregatedEntities` attribute, i.e. entities referencing the `AggregateEntity` using the `ParentAggregate` attribute are not disaggregated. 
 
 
```mermaid 
sequenceDiagram 
autonumber 
 
Trigger-&gt;&gt;AggregateEntity: Aggregate(aggregate) 
loop entity=aggregate.DisaggregatedEntities 
AggregateEntity-&gt;&gt;Federation: entity.deleteObjectInstance 
end 
AggregateEntity-&gt;&gt;Federation: aggregate.updateAttributeValues 
AggregateEntity-&gt;&gt;Trigger: Response 
 
``` 
 
1. A federate sends an `Aggregate` trigger indicating which `AggregateEntity` to aggregate. Then, the Federate owning the `DisaggregatedEntities` attribute of the `AggregateEntity` performs the aggregation. 
2. The `AggregateEntity` federate deletes all entities referenced by the `DisaggregatedEntities` attribute 
3. The `AggregateEntity` federate updates all `AggregateEntity` attributes to reflect the current state, including the `Status` set to `Active`. 
4. On completion, the federate sends a `Response` interaction with the `Status` parameter set to indicate the successful completion of the request. 
 
 
### Division 
 
 
Division of an `AggregateEntity` is a temporary allocation of some specific resources to another `AggregateEntity` or into one or more `Platform` and `Lifeform` objects. 
 
A federate application can perform the division of an `AggregateEntity` under the following conditions: 
 
* The federate application owning the `DividedEntities` attribute of the `AggregateEntity` can perform division. 
* The `Status` of the `AggregateEntity` is `Active`. 
* The `AggregateEntity` has not been disaggregated, i.e. the `DisaggregatedEntities` attribute must be empty. 
 
 
```mermaid 
sequenceDiagram 
autonumber 
 
Trigger-&gt;&gt;Federate: Divide(Resources, aggregate/physical) 
 
Federate-&gt;&gt;Federation: registerObjectInstance(s) 
Federate-&gt;&gt;Federation: updateAttributeValues 
Federate-&gt;&gt;Federation: updateAttributeValues(DividedEntities) 
Federate-&gt;&gt;Federation: updateAttributeValues(SourceAggregate) 
 
Federate-&gt;&gt;Trigger: Response 
 
``` 
 
1. A Request federate sends a `Divide` interaction indicating the `AggregateEntity` to divide and the list of resources to reallocate to new entities. The request also indicates if resources should be allocated to a new `AggregateEntity` or as one or more physical `Platform` or `Lifeform` objects. The Federate owning the `DividedEntities` attribute of the `AggregateEntity` is responsible for performing the division. 
2. The federate registers either a new `AggregateEntity` or one or more `Platform` or `Lifeform` objects. 
3. The `AggregateEntity` and new entity are updated with the current status of allocated resources. 
4. The `AggregateEntity` is updated with the attribute `DividedEntities` referencing all newly created entities. 
5. All newly created entities are updated with the attribute `SourceAggregate` to refer to the `AggregateEntity`. 
6. On completion, the federate sends a `Response` interaction with the `Status` parameter set to indicate the successful completion of the request. 
 
After division, the following is true: 
 
```mermaid 
flowchart BT 
 
subgraph NETN-ORG 
Equipment --holding--&gt; Unit 
end 
 
AggregateEntity --Unit--&gt; Unit 
 
subgraph NETN-MRM 
AggregateEntity1--SourceAggregate--&gt;AggregateEntity 
Platform1--SourceAggregate--&gt;AggregateEntity 
Lifeform1--SourceAggregate--&gt;AggregateEntity 
end 
``` 
 
* A new `AggregateEntity` object exists with a `SourceAggregate` attribute referencing the divided `AggregateEntity`, OR 
* One or more new `Platform` and `Lifeform` objects exist with the `SourceAggregate` attribute referencing the divided `AggregateEntity 
* The divided `AggregateEntity` references all new divided entities in the `DividedEntities` attribute. 
 
 
### Merging 
 
Merging of an `AggregateEntity` with one of its divided entities can be performed under the following conditions: 
 
* The federate application owning the `DividedEntities` attribute of the `AggregateEntity` can perform a merge. 
* The `Status` of the `AggregateEntity` is `Active`. 
* The `AggregateEntity` has been divided, i.e. the `DividedEntities` attribute must contain at least one element. 
 
 
```mermaid 
sequenceDiagram 
autonumber 
 
Trigger-&gt;&gt;Federate: Merge(aggregate, dividedEntities) 
loop entity=dividedEntities 
Federate-&gt;&gt;Federation: entity.deleteObjectInstance 
end 
Federate-&gt;&gt;Federation: aggregate.updateAttributeValues(DividedEntities) 
Federate-&gt;&gt;Federation: aggregate.updateAttributeValues 
Federate-&gt;&gt;Trigger: Response 
 
``` 
 
1. A Request federate sends a `Merge` interaction indicating the `AggregateEntity` and the divided entities to merge. The Federate owning the `DividedEntities` attribute of the `AggregateEntity` performs the merge. 
2. The federate deletes all merged entities. 
3. Update the `AggregateEntity` attribute `DividedEntities` to exclude the divided entities now merged. 
4. Update the `AggregateEntity` attributes to reflect the merged status. 
5. On completion, the federate sends a `Response` interaction with the `Status` parameter set to indicate success or failure. 
 
After merging, the `AggregateEntity` representation includes all previously divided entities.</semantics>
        </note>
    </notes>
</objectModel>
